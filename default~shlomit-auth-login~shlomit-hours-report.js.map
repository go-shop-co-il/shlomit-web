{"version":3,"sources":["./libs/ui/src/lib/form/error/error.validator.ts"],"names":[],"mappings":"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","file":"default~shlomit-auth-login~shlomit-hours-report.js","sourcesContent":["/*\n                      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n  This Validator is deprecated due to inability to use i18n service inside it.\n  It will be removed in the future.\n\n  Please replace it with new validator - libs\\shared\\ui\\form\\src\\lib\\error\\custom-error.validator.ts\n  To be able to use it:\n  1) import \"libs\\shared\\ui\\form\\src\\lib\\form.module.ts\" into your module\n  2) inject \"MultilingualValidators\" as regular Angular service where you want it to use\n\n  Example of usage:\n\n  1) inside the super() of the constructor\n  \n  constructor(\n    public fb: FormBuilder,\n    private customValidators: MultilingualValidators,\n  ) {\n    super(fb.group({entityId: ['', customValidators.required]}));\n  }\n  \n  2) regular case:\n    \n  fb.group({entityId: ['', this.customValidators.required]})\n\n\n  If you need to change something in Validator, please change in both until this one be removed.\n*/\n\nimport {\n  AbstractControl,\n  FormArray,\n  FormGroup,\n  Validators,\n  ValidatorFn,\n} from '@angular/forms';\nimport { compact, get, isNaN, reduce, toNumber } from 'lodash';\nimport { RegexPatterns } from './custom-error.validator';\n\nconst deprecatedMessage = `libs/shared/ui/form/src/lib/error/error.validator.ts is deprecated and will be removed soon.\nPlease replace it with:\nlibs/shared/ui/form/src/lib/error/custom-error.validator.ts. See error.validator.ts for description.`;\nconst showWarning = () => console.warn(deprecatedMessage);\n\nexport class CustomValidators extends Validators {\n  // Source: https://medium.com/ngx/3-ways-to-implement-conditional-validation-of-reactive-forms-c59ed6fc3325\n  static conditional(predicate: Function, validator): {} {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.parent) {\n        return null;\n      }\n      if (predicate()) {\n        return validator(control);\n      }\n      return null;\n    };\n  }\n\n  static required(control: AbstractControl): {} {\n    const baseRequired = Validators.required(control);\n    const isRequired = baseRequired && baseRequired.required;\n    showWarning();\n    return isRequired\n      ? {\n          required: {\n            message: '@@FIELD_REQUIRED',\n            displayMessage: 'Please fill up the required field',\n          },\n        }\n      : null;\n  }\n\n  static maxAmount(input: string): {} {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n      const maxAmount = Validators.max(Number(input))(control);\n      if (!maxAmount) {\n        return null;\n      }\n      return {\n        max: {\n          message: '@@AMOUNT_TOO_HIGH',\n          displayMessage: 'The Amount value is above the limit',\n        },\n      };\n    };\n  }\n\n  static minLength(min: number): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n      const baseMinLength = Validators.minLength(min)(control);\n      if (!baseMinLength) {\n        return null;\n      }\n      const requiredLength = get(baseMinLength, 'maxlength.requiredLength');\n      const actualLength = get(baseMinLength, 'maxlength.actualLength');\n      return {\n        maxLength: {\n          message: '@@NUMBER_TOO_LOW',\n          displayMessage: 'The length of the string is shorter than expected',\n          requiredLength,\n          actualLength,\n        },\n      };\n    };\n  }\n\n  static maxLength(max: number): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n      const baseMaxLength = Validators.maxLength(max)(control);\n      if (!baseMaxLength) {\n        return null;\n      }\n      const requiredLength = get(baseMaxLength, 'maxlength.requiredLength');\n      const actualLength = get(baseMaxLength, 'maxlength.actualLength');\n      return {\n        maxLength: {\n          message: '@@NUMBER_TOO_HIGH',\n          displayMessage: 'The length of the string is higher than expected',\n          requiredLength,\n          actualLength,\n        },\n      };\n    };\n  }\n\n  static israelyIdNumber(control: AbstractControl): {} {\n    showWarning();\n     return !control.value ||\n      CustomValidators.isValidIsraelyIdNumber(control.value)\n      ? null\n      : {\n          time: {\n            message: '@@INVALID_TIME',\n            displayMessage: 'תעודת זהות לא חוקית',\n          },\n        };\n  }\n\n  static email(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n    return RegexPatterns.email.test(control.value)\n      ? null\n      : {\n          email: {\n            message: '@@INVALID_EMAIL',\n            displayMessage: 'Please ensure your email is valid',\n          },\n        };\n  }\n\n  static phone(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.phoneNumber.test(control.value)\n      ? null\n      : {\n          phone: {\n            message: '@@NOT_A_PHONE_NUMBER',\n            displayMessage: 'Please enter a valid phone number',\n          },\n        };\n  }\n\n  static validateCharacters(control: AbstractControl): {} {\n    showWarning();\n    if (control.value && control.value.length > 0) {\n      const matches = control.value.match(RegexPatterns.validCharacters);\n      if (matches && matches.length) {\n        const characters: string = reduce(\n          matches,\n          (characterString: string, character: string, index: number) => {\n            let string = characterString;\n            string += character;\n            if (matches.length !== index + 1) {\n              string += ', ';\n            }\n\n            return string;\n          },\n          ''\n        );\n        return {\n          validateCharacters: {\n            characters,\n            message: `@@CHARACTERS_NOT_ALLOWED, invalid: ${characters}`,\n            displayMessage: `Please don’t use these invalid characters: ${characters}`,\n          },\n        };\n      }\n\n      return null;\n    }\n\n    return null;\n  }\n\n  static url(control: AbstractControl): {} {\n    showWarning();\n    if (control.value && control.value.length > 0) {\n      return RegexPatterns.url.test(control.value)\n        ? null\n        : {\n            url: {\n              message: '@@INVALID_URL',\n              displayMessage: 'Please enter a valid URL',\n            },\n          };\n    }\n\n    return null;\n  }\n\n  static digits(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.digits.test(control.value)\n      ? null\n      : {\n          digits: {\n            message: '@@CONTAINS_NON_DIGITS',\n            displayMessage: 'Please use only digits charters',\n          },\n        };\n  }\n\n  static double(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.double.test(control.value)\n      ? null\n      : {\n          double: {\n            message: '@@CONTAINS_NON_NUMBER_OR_DOUBLE',\n            displayMessage: 'Please use only integer or double numbers',\n          },\n        };\n  }\n\n  static onlyStrings(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.strings.test(control.value)\n      ? null\n      : {\n          onlyStrings: {\n            message: '@@CONTAINS_NON_ALPAHBET',\n            displayMessage: 'Please use only alphabet charters',\n          },\n        };\n  }\n\n  static ip(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.ip.test(control.value)\n      ? null\n      : {\n          ip: {\n            message: '@@CONTAINS_INVALID_IP_FORMAT',\n            displayMessage: 'Please enter a valid IP address',\n          },\n        };\n  }\n\n  static ipPort(lastPort: number): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n\n      return Number(control.value) && Number(control.value) <= lastPort\n        ? null\n        : {\n            ip: {\n              message: '@@CONTAINS_INVALID_IP_FORMAT',\n              displayMessage: 'Please enter a valid port',\n            },\n          };\n    };\n  }\n\n  static version(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.version.test(control.value)\n      ? null\n      : {\n          version: {\n            message: '@@CONTAINS_INVALID_VERSION_FORMAT',\n            displayMessage:\n              'Please enter a valid version format ([2].[3].[4].[6])',\n          },\n        };\n  }\n\n  static nonZeroVersion(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return !RegexPatterns.nonZeroVersion.test(control.value)\n      ? null\n      : {\n          nonZeroVersion: {\n            message: '@@CONTAINS_ALL_0',\n            displayMessage: 'Version could not contain all 0',\n          },\n        };\n  }\n\n  static maxWords(max: number): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      const maxWords = new RegExp(`(\\\\w+\\\\W+){${max}}\\\\w+(\\\\W+\\\\w+)*`);\n      if (!control.value) {\n        return null;\n      }\n\n      return !maxWords.test(control.value)\n        ? null\n        : {\n            minWords: {\n              message: `@@MORE_THAN_${max}_WORDS`,\n              displayMessage: `Please don't use more than ${max} words`,\n            },\n          };\n    };\n  }\n\n  static validateFirstLastCharacters(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return !RegexPatterns.validateFirstLastCharacters.test(control.value)\n      ? null\n      : {\n          validateFirstLastCharacters: {\n            message: '@@CONTAINS_INVALID_FIRST_OR_LAST_SYMBOL',\n            displayMessage: 'Please enter a valid first or last symbols',\n          },\n        };\n  }\n\n  static cartesBancairesPaymentType(\n    processorType: AbstractControl,\n    defaultPaymentTypes: string[]\n  ): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n\n      const invalidTypes = control.value.filter(\n        (paymentType) => !defaultPaymentTypes.includes(paymentType)\n      );\n      return invalidTypes.length\n        ? {\n            version: {\n              message: `@@${\n                processorType.value\n              } does not support: ${invalidTypes.join(',')}`,\n              displayMessage: `@@${\n                processorType.value\n              } does not support: ${invalidTypes.join(',')}`,\n            },\n          }\n        : null;\n    };\n  }\n\n  static validSelectedValue(validValues: string[]): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n\n      const isValidValue = validValues.some((value) => value === control.value);\n\n      return isValidValue\n        ? null\n        : {\n            validSelectedValue: {\n              message: '@@CONTAINS_INVALID_VALUE',\n              displayMessage: 'Please enter a valid value',\n            },\n          };\n    };\n  }\n\n  static allSpaces(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return !RegexPatterns.allSpaces.test(control.value)\n      ? null\n      : {\n          allSpaces: {\n            message: '@@CONTAINS_ALL_SPACES',\n            displayMessage: 'Could not contains only spaces',\n          },\n        };\n  }\n\n  static price(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.price.test(control.value)\n      ? null\n      : {\n          price: {\n            message: '@@CONTAINS_INVALID_PRICE_FORMAT',\n            displayMessage: 'Please enter a valid price (X.XX)',\n          },\n        };\n  }\n\n  static nonZero(control: AbstractControl): {} {\n    showWarning();\n    if (control.value === null) {\n      return null;\n    }\n\n    return !RegexPatterns.nonZero.test(control.value)\n      ? null\n      : {\n          nonZero: {\n            message: '@@0_NOT_ALLOWED',\n            displayMessage: '0 is not allowed',\n          },\n        };\n  }\n\n  static oneSpaceBetweenWords(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.oneSpaceBetweenWords.test(control.value.trim())\n      ? null\n      : {\n          version: {\n            message: '@@CONTAINS_MORE_THAN_ONE_SPACE_BETWEEN_WORDS',\n            displayMessage: 'Please avoid extra spaces',\n          },\n        };\n  }\n\n  static higherVersion(oldVersion: string): ValidatorFn {\n    showWarning();\n    return (control: AbstractControl) => {\n      if (!control.value) {\n        return null;\n      }\n\n      const oldV = oldVersion.split('.');\n      const newV = control.value.split('.');\n\n      while (oldV.length < newV.length) {\n        oldV.push('0');\n      }\n      while (newV.length < oldV.length) {\n        newV.push('0');\n      }\n\n      for (let i = 0; i < oldV.length; ++i) {\n        if (newV.length === i) {\n          return null;\n        }\n\n        if (+oldV[i] === +newV[i]) {\n          continue;\n        } else if (+oldV[i] > +newV[i]) {\n          return {\n            higherVersion: {\n              message: `@@VERSION_MUST_BE_MORE_THAN_CURRENT_${oldVersion}`,\n              displayMessage: `The version number should be grater than ${oldVersion}`,\n            },\n          };\n        } else {\n          return null;\n        }\n      }\n\n      return {\n        higherVersion: {\n          message: `@@VERSION_MUST_BE_MORE_THAN_CURRENT_${oldVersion}`,\n          displayMessage: `The version number should be grater than ${oldVersion}`,\n        },\n      };\n    };\n  }\n\n  static time(control: AbstractControl): {} {\n    showWarning();\n    return !control.value || CustomValidators.isValidTime(control.value)\n      ? null\n      : {\n          time: {\n            message: '@@INVALID_TIME',\n            displayMessage: 'Invalid time format',\n          },\n        };\n  }\n\n  static timePair(group: FormGroup): {} {\n    showWarning();\n    const startControl = group.get('start');\n    const endControl = group.get('end');\n\n    if (\n      startControl.value &&\n      CustomValidators.isValidTime(startControl.value) &&\n      endControl.value &&\n      CustomValidators.isValidTime(endControl.value)\n    ) {\n      if (startControl.value >= endControl.value) {\n        return {\n          timePair: {\n            message: '@@INVALID_TIME_PAIR',\n            displayMessage: 'End time should be after start time',\n          },\n        };\n      }\n    }\n\n    return null;\n  }\n\n  static timePairOverlap(array: FormArray): {} {\n    showWarning();\n    const values = compact(\n      array.value.flatMap((item) => {\n        if (\n          CustomValidators.isValidTime(item.start) &&\n          CustomValidators.isValidTime(item.end) &&\n          item.start < item.end\n        ) {\n          return [item.start, item.end];\n        }\n      })\n    );\n    const sortedValues = [...values].sort();\n\n    return values.join(',') === sortedValues.join(',')\n      ? null\n      : {\n          timePairOverlap: {\n            message: '@@INVALID_TIME_PAIR_OVERLAP',\n            displayMessage: 'Timeslots should not overlap',\n          },\n        };\n  }\n\n  static markOneOption(openingHours: AbstractControl): {} {\n    showWarning();\n    return openingHours.value.length\n      ? null\n      : {\n          markOneOption: {\n            message: '@@INVALID_MARRK_ONE_OPTION',\n            displayMessage:\n              'Please mark at least one option and add valid hours',\n          },\n        };\n  }\n\n  static iban(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    return RegexPatterns.iban.test(control.value)\n      ? null\n      : {\n          iban: {\n            message: '@@CONTAINS_INVALID_IBAN_FORMAT',\n            displayMessage: 'Please enter a valid IBAN code',\n          },\n        };\n  }\n\n  /*\n    https://developers.google.com/maps/documentation/javascript/reference/coordinates?hl=fr#LatLng\n    \"Longitude ranges between -180 and 180 degrees, inclusive.\"\n  */\n  static longitude(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    const numberValue = toNumber(control.value);\n\n    return !isNaN(numberValue) && numberValue <= 180 && numberValue >= -180\n      ? null\n      : {\n          longitude: {\n            message: '@@CONTAINS_INVALID_LONGITUDE',\n            displayMessage: 'Please enter a valid longitude',\n          },\n        };\n  }\n\n  /*\n    https://developers.google.com/maps/documentation/javascript/reference/coordinates?hl=fr#LatLng\n    \"Latitude ranges between -90 and 90 degrees, inclusive.\"\n  */\n  static latitude(control: AbstractControl): {} {\n    showWarning();\n    if (!control.value) {\n      return null;\n    }\n\n    const numberValue = toNumber(control.value);\n\n    return !isNaN(numberValue) && numberValue <= 90 && numberValue >= -90\n      ? null\n      : {\n          latitude: {\n            message: '@@CONTAINS_INVALID_LATITUDE',\n            displayMessage: 'Please enter a valid latitude',\n          },\n        };\n  }\n\n  private static isValidIsraelyIdNumber(id: string): boolean {\n    var id = String(id).trim();\n    if (id.length > 9 || id.length < 5 || isNaN(id)) return false;\n\n    // Pad string with zeros up to 9 digits\n    id = id.length < 9 ? ('00000000' + id).slice(-9) : id;\n\n    return (\n      Array.from(id, Number).reduce((counter, digit, i) => {\n        const step = digit * ((i % 2) + 1);\n        return counter + (step > 9 ? step - 9 : step);\n      }) %\n        10 ===\n      0\n    );\n  }\n\n  private static isValidTime(timeString: string): boolean {\n    return (\n      RegexPatterns.time.test(timeString) &&\n      timeString >= '00:00' &&\n      timeString <= '23:59'\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}